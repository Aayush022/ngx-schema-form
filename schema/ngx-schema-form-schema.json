{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "id": "https://ngx-schema-form/schema",
  "title": "JSON Schema ngx-schema-form",
  "type": "object",
  "$ref": "#/definitions/formWidgetType",
  "allOf": [
    {
      "$ref": "http://json-schema.org/draft-07/schema#"
    }
  ],
  "definitions": {
    "widgetTypeCustom": {
      "type": "string",
      "description": "The name of custom widget type to use"
    },
    "widgetTypeSimple": {
      "type": "string",
      "description": "The name of widget type to use",
      "enum": [
        "array",
        "object",
        "string",
        "search",
        "tel",
        "url",
        "email",
        "password",
        "color",
        "date",
        "date-time",
        "time",
        "integer",
        "number",
        "range",
        "textarea",
        "file",
        "select",
        "radio",
        "boolean",
        "checkbox",
        "button",
        "hidden"
      ]
    },
    "widgetType": {
      "type": "object",
      "description": "The widget type to use.",
      "properties": {
        "id": {
          "description": "The id of the widget.",
          "oneOf": [
            {
              "$ref": "#/definitions/widgetTypeSimple"
            },
            {
              "$ref": "#/definitions/widgetTypeCustom"
            }
          ]
        },
        "buttons": {
          "$ref": "#/definitions/buttonArrayType"
        },
        "oneOf": {
          "type": "array",
          "description": "Defines a collection to use for selectable widgets (SELECT, RADIO ...).",
          "items": {
            "properties": {
              "enum": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Any string value."
                    },
                    {
                      "type": "boolean",
                      "description": "Either true or false."
                    },
                    {
                      "type": "number",
                      "description": "Any number value."
                    },
                    {
                      "type": "null",
                      "description": "Null value."
                    }
                  ]
                },
                "minItems": 1,
                "uniqueItems": true,
                "description": "The value of this item in the selection. Only the first item will be used as value. Any value except object is allowed."
              },
              "description": {
                "type": "string",
                "description": "The label of this item in the selection."
              }
            }
          }
        }
      },
      "additionalProperties": true
    },
    "buttonType": {
      "description": "A list of buttons to trigger some action for this field.",
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "The label to show on the button."
        },
        "id": {
          "type": "string",
          "description": "The action id must match action defined in the action object."
        },
        "parameters": {
          "type": "object",
          "description": "Custom defined properties that will be passed to the action method."
        },
        "widget": {
          "$ref": "#/definitions/widgetTypeCustom",
          "description": "Custom defined widget id, that will do the rendering of this button. Will render a default button if not set."
        }
      },
      "required": [
        "id",
        "label"
      ],
      "additionalProperties": true
    },
    "buttonArrayType": {
      "description": "A list of buttons to trigger some action for this field.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/buttonType"
      },
      "uniqueItems": true,
      "default": [],
      "minItems": 1
    },
    "fieldsArrayType": {
      "description": "A list of field paths.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "default": []
    },
    "fieldsetsType": {
      "description": "A section of fields.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The section id."
        },
        "title": {
          "type": "string",
          "description": "The label of the section."
        },
        "fields": {
          "description": "A list of property keys representing fields that belong to this sections.",
          "$ref": "#/definitions/fieldsArrayType"
        }
      },
      "required": [
        "id",
        "fields"
      ],
      "additionalProperties": true
    },
    "fieldsetsArrayType": {
      "description": "A list of definitions representing sections of widgets.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/fieldsetsType"
      },
      "uniqueItems": true,
      "default": [],
      "minItems": 1
    },
    "formWidgetTypeProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "The form title of the root form. Will only be showed when is an inline form"
        },
        "widget": {
          "oneOf": [
            {
              "$ref": "#/definitions/widgetTypeSimple"
            },
            {
              "$ref": "#/definitions/widgetType"
            },
            {
              "$ref": "#/definitions/widgetTypeCustom"
            }
          ]
        },
        "order": {
          "description": "A list of unique property keys describing the final order.",
          "$ref": "#/definitions/fieldsArrayType"
        },
        "fieldsets": {
          "$ref": "#/definitions/fieldsetsArrayType"
        },
        "buttons": {
          "$ref": "#/definitions/buttonArrayType"
        },
        "placeholder": {
          "type": "string",
          "description": "A placeholder to pre-fill input field. Will work with any HTML element of type input."
        },
        "visibleIf": {
          "type": "object",
          "description": "Definition of when is this widget visible or not. The schema property path of target fields is expected to be separated by '/' and not by '.'. E.g. '/myform/myfield'",
          "patternProperties": {
            "^.*$": {
              "description": "The path to any other property. E.g: /cat/name",
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "$ANY$"
                    ],
                    "description": "When the field has any values set."
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        },
        "properties": {
          "patternProperties": {
            "^.*$": {
              "allOf": [
                {
                  "$ref": "#/definitions/formWidgetTypeProperties"
                },
                {
                  "$ref": "http://json-schema.org/draft-07/schema#"
                }
              ]
            }
          }
        },
        "additionalProperties": true
      }
    },
    "formWidgetType": {
      "$ref": "#/definitions/formWidgetTypeProperties",
      "type": "object",
      "description": "A form widget.",
      "additionalProperties": true
    }
  }
}