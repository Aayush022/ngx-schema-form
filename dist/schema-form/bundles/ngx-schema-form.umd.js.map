{"version":3,"file":"ngx-schema-form.umd.js.map","sources":["ng://ngx-schema-form/lib/model/actionregistry.ts",null,"ng://ngx-schema-form/lib/model/formproperty.ts","ng://ngx-schema-form/lib/model/atomicproperty.ts","ng://ngx-schema-form/lib/model/numberproperty.ts","ng://ngx-schema-form/lib/model/stringproperty.ts","ng://ngx-schema-form/lib/model/booleanproperty.ts","ng://ngx-schema-form/lib/model/objectproperty.ts","ng://ngx-schema-form/lib/model/arrayproperty.ts","ng://ngx-schema-form/lib/model/formpropertyfactory.ts","ng://ngx-schema-form/lib/model/utils.ts","ng://ngx-schema-form/lib/model/schemapreprocessor.ts","ng://ngx-schema-form/lib/model/validatorregistry.ts","ng://ngx-schema-form/lib/model/bindingregistry.ts","ng://ngx-schema-form/lib/schemavalidatorfactory.ts","ng://ngx-schema-form/lib/widgetregistry.ts","ng://ngx-schema-form/lib/widgetfactory.ts","ng://ngx-schema-form/lib/terminator.service.ts","ng://ngx-schema-form/lib/form.component.ts","ng://ngx-schema-form/lib/formelement.component.ts","ng://ngx-schema-form/lib/formelement.action.component.ts","ng://ngx-schema-form/lib/widgetchooser.component.ts","ng://ngx-schema-form/lib/widget.ts","ng://ngx-schema-form/lib/defaultwidgets/array/array.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/button/button.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/object/object.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/checkbox/checkbox.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/file/file.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/integer/integer.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/textarea/textarea.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/radio/radio.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/range/range.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/select/select.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/string/string.widget.ts","ng://ngx-schema-form/lib/defaultwidgets/defaultwidgetregistry.ts","ng://ngx-schema-form/lib/default.widget.ts","ng://ngx-schema-form/lib/schema-form.module.ts","ng://ngx-schema-form/lib/template-schema/template-schema.service.ts","ng://ngx-schema-form/lib/template-schema/template-schema-element.ts","ng://ngx-schema-form/lib/template-schema/button/button.component.ts","ng://ngx-schema-form/lib/template-schema/field/field.ts","ng://ngx-schema-form/lib/template-schema/field/field-parent.ts","ng://ngx-schema-form/lib/template-schema/field/item/item.component.ts","ng://ngx-schema-form/lib/template-schema/field/field.component.ts","ng://ngx-schema-form/lib/template-schema/template-schema.directive.ts","ng://ngx-schema-form/lib/template-schema/template-schema.module.ts"],"sourcesContent":["import { Action } from './action';\n\nexport class ActionRegistry {\n  actions: {[key: string]: Action} = {};\n\n  clear() {\n    this.actions = {};\n  }\n\n  register(actionId: string, action: Action) {\n    this.actions[actionId] = action;\n  }\n\n  get(actionId: string) {\n    return this.actions[actionId];\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\n\nexport abstract class FormProperty {\n  public schemaValidator: Function;\n\n  _value: any = null;\n  _errors: any = null;\n  private _valueChanges = new BehaviorSubject<any>(null);\n  private _errorsChanges = new BehaviorSubject<any>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup;\n  private _path: string;\n\n  constructor(schemaValidatorFactory: SchemaValidatorFactory,\n              private validatorRegistry: ValidatorRegistry,\n              public schema: any,\n              parent: PropertyGroup,\n              path: string) {\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(this.schema);\n\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = <PropertyGroup><any>this;\n    }\n    this._path = path;\n  }\n\n  public get valueChanges() {\n    return this._valueChanges;\n  }\n\n  public get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  public get type(): string {\n    return this.schema.type;\n  }\n\n  public get parent(): PropertyGroup {\n    return this._parent;\n  }\n\n  public get root(): PropertyGroup {\n    return this._root || <PropertyGroup><any>this;\n  }\n\n  public get path(): string {\n    return this._path;\n  }\n\n  public get value() {\n    return this._value;\n  }\n\n  public get visible() {\n    return this._visible;\n  }\n\n  public get valid() {\n    return this._errors === null;\n  }\n\n  public abstract setValue(value: any, onlySelf: boolean);\n\n  public abstract reset(value: any, onlySelf: boolean);\n\n  public updateValueAndValidity(onlySelf = false, emitEvent = true) {\n    this._updateValue();\n\n    if (emitEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    this._runValidation();\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitEvent);\n    }\n\n  }\n\n  /**\n   * @internal\n   */\n  public abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  public abstract _updateValue();\n\n  /**\n   * @internal\n   */\n  public _runValidation(): any {\n    let errors = this.schemaValidator(this._value) || [];\n    let customValidator = this.validatorRegistry.get(this.path);\n    if (customValidator) {\n      let customErrors = customValidator(this.value, this, this.findRoot());\n      errors = this.mergeErrors(errors, customErrors);\n    }\n    if (errors.length === 0) {\n      errors = null;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors, newErrors) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  private setErrors(errors) {\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n  }\n\n  public extendErrors(errors) {\n    errors = this.mergeErrors(this._errors || [], errors);\n    this.setErrors(errors);\n  }\n\n  searchProperty(path: string): FormProperty {\n    let prop: FormProperty = this;\n    let base: PropertyGroup = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  public findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return <PropertyGroup>property;\n  }\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    this.updateValueAndValidity();\n    if (this.parent) {\n      this.parent.updateValueAndValidity(false, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  public _bindVisibility() {\n    let visibleIf = this.schema.visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    }\n    else if (visibleIf !== undefined) {\n      let propertiesBinding = [];\n      for (let dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          let property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(map(\n              value => {\n                if (visibleIf[dependencyPath].indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return visibleIf[dependencyPath].indexOf(value) !== -1;\n                }\n              }\n            ));\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck], (v1, v2) => v1 && v2);\n            propertiesBinding.push(and);\n          } else {\n            console.warn('Can\\'t find property ' + dependencyPath + ' for visibility check of ' + this.path);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding, (...values: boolean[]) => {\n        return values.indexOf(true) !== -1;\n      }).pipe(distinctUntilChanged()).subscribe((visible) => {\n        this.setVisible(visible);\n      });\n    }\n  }\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n\n  properties: FormProperty[] | { [key: string]: FormProperty } = null;\n\n  getProperty(path: string) {\n    let subPathIdx = path.indexOf('/');\n    let propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      let subPath = path.substr(subPathIdx + 1);\n      property = (<PropertyGroup>property).getProperty(subPath);\n    }\n    return property;\n  }\n\n  public forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\n    for (let propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        let property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  public forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild((child) => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (<PropertyGroup>child).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  public _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive((property) => {\n      property._bindVisibility();\n    });\n  }\n\n  public isRoot() {\n    return this === this.root;\n  }\n}\n\n\n","import {FormProperty} from './formproperty';\n\nexport abstract class AtomicProperty extends FormProperty {\n\n  setValue(value, onlySelf = false) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  reset(value: any = null, onlySelf = true) {\n    this.resetValue(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: any): any {\n    if (value === null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n  }\n\n  public _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  abstract fallbackValue(): any;\n\n  public _updateValue() {\n  }\n}\n","import {AtomicProperty} from './atomicproperty';\n\nexport class NumberProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value, onlySelf = false) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = null;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import { AtomicProperty } from './atomicproperty';\n\nexport class StringProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return '';\n  }\n\n}\n","import { AtomicProperty } from './atomicproperty';\n\nexport class BooleanProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return null;\n  }\n}\n","import {PropertyGroup} from './formproperty';\nimport {FormPropertyFactory} from './formpropertyfactory';\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\n\nexport class ObjectProperty extends PropertyGroup {\n\n  private propertiesId: string[] = [];\n\n  constructor(private formPropertyFactory: FormPropertyFactory,\n              schemaValidatorFactory: SchemaValidatorFactory,\n              validatorRegistry: ValidatorRegistry,\n              schema: any,\n              parent: PropertyGroup,\n              path: string) {\n    super(schemaValidatorFactory, validatorRegistry, schema, parent, path);\n    this.createProperties();\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  reset(value: any, onlySelf = true) {\n    value = value || this.schema.default || {};\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetProperties(value: any) {\n    for (const propertyId in this.schema.properties) {\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].reset(value[propertyId], true);\n      }\n    }\n  }\n\n  createProperties() {\n    this.properties = {};\n    this.propertiesId = [];\n    for (const propertyId in this.schema.properties) {\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\n        const propertySchema = this.schema.properties[propertyId];\n        this.properties[propertyId] = this.formPropertyFactory.createProperty(propertySchema, this, propertyId);\n        this.propertiesId.push(propertyId);\n      }\n    }\n  }\n\n  public _hasValue(): boolean {\n    return !!Object.keys(this.value).length;\n  }\n\n  public _updateValue() {\n    this.reduceValue();\n  }\n\n  public _runValidation() {\n    super._runValidation();\n\n    if (this._errors) {\n      this._errors.forEach(error => {\n        const prop = this.searchProperty(error.path.slice(1));\n        if (prop) {\n          prop.extendErrors(error);\n        }\n      });\n    }\n  }\n\n  private reduceValue(): void {\n    const value = {};\n    this.forEachChild((property, propertyId: string) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import {FormProperty, PropertyGroup} from './formproperty';\nimport {FormPropertyFactory} from './formpropertyfactory';\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\n\nexport class ArrayProperty extends PropertyGroup {\n\n  constructor(private formPropertyFactory: FormPropertyFactory,\n              schemaValidatorFactory: SchemaValidatorFactory,\n              validatorRegistry: ValidatorRegistry,\n              schema: any,\n              parent: PropertyGroup,\n              path: string) {\n    super(schemaValidatorFactory, validatorRegistry, schema, parent, path);\n  }\n\n  addItem(value: any = null): FormProperty {\n    let newProperty = this.addProperty();\n    newProperty.reset(value, false);\n    return newProperty;\n  }\n\n  private addProperty() {\n    let newProperty = this.formPropertyFactory.createProperty(this.schema.items, this);\n    (<FormProperty[]>this.properties).push(newProperty);\n    return newProperty;\n  }\n\n  removeItem(index: number) {\n    (<FormProperty[]>this.properties).splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    this.createProperties();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  public _hasValue(): boolean {\n    return true;\n  }\n\n  public _updateValue() {\n    this.reduceValue();\n  }\n\n  private reduceValue(): void {\n    const value = [];\n    this.forEachChild((property, _) => {\n      if (property.visible && property._hasValue()) {\n        value.push(property.value);\n      }\n    });\n    this._value = value;\n  }\n\n  reset(value: any, onlySelf = true) {\n    value = value || this.schema.default || [];\n    this.properties = [];\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  private createProperties() {\n    this.properties = [];\n  }\n\n\n  private resetProperties(value: any) {\n    for (let idx in value) {\n      if (value.hasOwnProperty(idx)) {\n        let property = this.addProperty();\n        property.reset(value[idx], true);\n      }\n    }\n  }\n}\n","import {FormProperty, PropertyGroup} from './formproperty';\nimport {NumberProperty} from './numberproperty';\nimport {StringProperty} from './stringproperty';\nimport {BooleanProperty} from './booleanproperty';\nimport {ObjectProperty} from './objectproperty';\nimport {ArrayProperty} from './arrayproperty';\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\n\nexport class FormPropertyFactory {\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private validatorRegistry: ValidatorRegistry) {\n  }\n\n  createProperty(schema: any, parent: PropertyGroup = null, propertyId?: string): FormProperty {\n    let newProperty = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += '/';\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += '*';\n      } else {\n        throw 'Instanciation of a FormProperty with an unknown parent type: ' + parent.type;\n      }\n    } else {\n      path = '/';\n    }\n\n    if (schema.$ref) {\n      const refSchema = this.schemaValidatorFactory.getSchema(parent.root.schema, schema.$ref);\n      newProperty = this.createProperty(refSchema, parent, path);\n    } else {\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    rootProperty.reset(null, true);\n    rootProperty._bindVisibility();\n  }\n}\n","export function isPresent(o) {\n  return o !== null && o !== undefined;\n}\n\nexport function isBlank(o) {\n  return o === null || o === undefined;\n}\n","import {isBlank} from './utils';\n\nfunction formatMessage(message, path) {\n  return `Parsing error on ${path}: ${message}`;\n}\n\nfunction schemaError(message, path): void {\n  let mesg = formatMessage(message, path);\n  throw new Error(mesg);\n}\n\nfunction schemaWarning(message, path): void {\n  let mesg = formatMessage(message, path);\n  throw new Error(mesg);\n}\n\nexport class SchemaPreprocessor {\n\n  static preprocess(jsonSchema: any, path = '/'): any {\n    jsonSchema = jsonSchema || {};\n    SchemaPreprocessor.normalizeExtensions(jsonSchema);\n    if (jsonSchema.type === 'object') {\n      SchemaPreprocessor.checkProperties(jsonSchema, path);\n      SchemaPreprocessor.checkAndCreateFieldsets(jsonSchema, path);\n    } else if (jsonSchema.type === 'array') {\n      SchemaPreprocessor.checkItems(jsonSchema, path);\n    }\n    SchemaPreprocessor.normalizeWidget(jsonSchema);\n    SchemaPreprocessor.recursiveCheck(jsonSchema, path);\n  }\n\n  private static checkProperties(jsonSchema, path: string) {\n    if (isBlank(jsonSchema.properties)) {\n      jsonSchema.properties = {};\n      schemaWarning('Provided json schema does not contain a \\'properties\\' entry. Output schema will be empty', path);\n    }\n  }\n\n  private static checkAndCreateFieldsets(jsonSchema: any, path: string) {\n    if (jsonSchema.fieldsets === undefined) {\n      if (jsonSchema.order !== undefined) {\n        SchemaPreprocessor.replaceOrderByFieldsets(jsonSchema);\n      } else {\n        SchemaPreprocessor.createFieldsets(jsonSchema);\n      }\n    }\n    SchemaPreprocessor.checkFieldsUsage(jsonSchema, path);\n  }\n\n  private static checkFieldsUsage(jsonSchema, path: string) {\n    let fieldsId: string[] = Object.keys(jsonSchema.properties);\n    let usedFields = {};\n    for (let fieldset of jsonSchema.fieldsets) {\n      for (let fieldId of fieldset.fields) {\n        if (usedFields[fieldId] === undefined) {\n          usedFields[fieldId] = [];\n        }\n        usedFields[fieldId].push(fieldset.id);\n      }\n    }\n\n    for (let fieldId of fieldsId) {\n      if (usedFields.hasOwnProperty(fieldId)) {\n        if (usedFields[fieldId].length > 1) {\n          schemaError(`${fieldId} is referenced by more than one fieldset: ${usedFields[fieldId]}`, path);\n        }\n        delete usedFields[fieldId];\n      } else if (jsonSchema.required.indexOf(fieldId) > -1) {\n        schemaError(`${fieldId} is a required field but it is not referenced as part of a 'order' or a 'fieldset' property`, path);\n      } else {\n        delete jsonSchema[fieldId];\n        schemaWarning(`Removing unreferenced field ${fieldId}`, path);\n      }\n    }\n\n    for (let remainingfieldsId in usedFields) {\n      if (usedFields.hasOwnProperty(remainingfieldsId)) {\n        schemaWarning(`Referencing non-existent field ${remainingfieldsId} in one or more fieldsets`, path);\n      }\n    }\n  }\n\n  private static createFieldsets(jsonSchema) {\n    jsonSchema.order = Object.keys(jsonSchema.properties);\n    SchemaPreprocessor.replaceOrderByFieldsets(jsonSchema);\n  }\n\n  private static replaceOrderByFieldsets(jsonSchema) {\n    jsonSchema.fieldsets = [{\n      id: 'fieldset-default',\n      title: jsonSchema.title || '',\n      description: jsonSchema.description || '',\n      name: jsonSchema.name || '',\n      fields: jsonSchema.order\n    }];\n    delete jsonSchema.order;\n  }\n\n  private static normalizeWidget(fieldSchema: any) {\n    let widget = fieldSchema.widget;\n    if (widget === undefined) {\n      widget = {'id': fieldSchema.type};\n    } else if (typeof widget === 'string') {\n      widget = {'id': widget};\n    }\n    fieldSchema.widget = widget;\n  }\n\n  private static checkItems(jsonSchema, path) {\n    if (jsonSchema.items === undefined) {\n      schemaError('No \\'items\\' property in array', path);\n    }\n  }\n\n  private static recursiveCheck(jsonSchema, path: string) {\n    if (jsonSchema.type === 'object') {\n      for (let fieldId in jsonSchema.properties) {\n        if (jsonSchema.properties.hasOwnProperty(fieldId)) {\n          let fieldSchema = jsonSchema.properties[fieldId];\n          SchemaPreprocessor.preprocess(fieldSchema, path + fieldId + '/');\n        }\n      }\n      if (jsonSchema.hasOwnProperty('definitions')) {\n        for (let fieldId in jsonSchema.definitions) {\n          if (jsonSchema.definitions.hasOwnProperty(fieldId)) {\n            let fieldSchema = jsonSchema.definitions[fieldId];\n            SchemaPreprocessor.removeRecursiveRefProperties(fieldSchema, `#/definitions/${fieldId}`);\n            SchemaPreprocessor.preprocess(fieldSchema, path + fieldId + '/');\n          }\n        }\n      }\n    } else if (jsonSchema.type === 'array') {\n      SchemaPreprocessor.preprocess(jsonSchema.items, path + '*/');\n    }\n  }\n\n  private static removeRecursiveRefProperties(jsonSchema, definitionPath) {\n    // to avoid infinite loop\n    if (jsonSchema.type === 'object') {\n      for (let fieldId in jsonSchema.properties) {\n        if (jsonSchema.properties.hasOwnProperty(fieldId)) {\n          if (jsonSchema.properties[fieldId].$ref\n            && jsonSchema.properties[fieldId].$ref === definitionPath) {\n            delete jsonSchema.properties[fieldId];\n          } else if (jsonSchema.properties[fieldId].type === 'object') {\n            SchemaPreprocessor.removeRecursiveRefProperties(jsonSchema.properties[fieldId], definitionPath);\n          }\n        }\n      }\n    }\n  }\n  \n  /**\n   * Enables alias names for JSON schema extensions.\n   *\n   * Copies the value of each alias JSON schema property\n   * to the JSON schema property of ngx-schema-form.\n   *\n   * @param schema JSON schema to enable alias names.\n   */\n  private static normalizeExtensions(schema: any): void {\n    const extensions = [\n        { name: \"fieldsets\", regex: /^x-?field-?sets$/i },\n        { name: \"widget\",    regex: /^x-?widget$/i },\n        { name: \"visibleIf\", regex: /^x-?visible-?if$/i }\n    ];\n    const keys = Object.keys(schema);\n    for (let i = 0; i < keys.length; ++i) {\n      let k = keys[i];\n      let e = extensions.find(e => !!k.match(e.regex));\n      if (e) {\n        let v = schema[k];\n        let copy = JSON.parse(JSON.stringify(v));\n        schema[e.name] = copy;\n      }\n    }\n  }\n}\n\n","import { Validator } from './validator';\n\nexport class ValidatorRegistry {\n  private validators: Validator[] = [];\n\n  register(path: string, validator: Validator) {\n    this.validators[path] = validator;\n  }\n\n  get(path: string): Validator {\n    return this.validators[path];\n  }\n\n  clear() {\n    this.validators = [];\n  }\n}\n","import {Binding} from './binding';\n\nexport class BindingRegistry {\n  bindings: Binding[] = [];\n\n  clear() {\n    this.bindings = [];\n  }\n\n  register(path: string, binding: Binding | Binding[]) {\n    this.bindings[path] = [].concat(binding);\n  }\n\n  get(path: string): Binding[] {\n    return this.bindings[path];\n  }\n}\n","import * as ZSchema from 'z-schema';\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema): (value: any) => any;\n\n  abstract getSchema(schema, ref): any;\n}\n\nexport class ZSchemaValidatorFactory extends SchemaValidatorFactory {\n\n  protected zschema;\n\n  constructor() {\n    super();\n    this.zschema = new ZSchema({\n        breakOnFirstError: false\n    });\n  }\n\n  createValidatorFn(schema: any) {\n    return (value): { [key: string]: boolean } => {\n\n      if (schema.type === 'number' || schema.type === 'integer') {\n        value = +value;\n      }\n\n      this.zschema.validate(value, schema);\n      let err = this.zschema.getLastErrors();\n\n      this.denormalizeRequiredPropertyPaths(err);\n\n      return err || null;\n    };\n  }\n\n  getSchema(schema: any, ref: string) {\n    // check definitions are valid\n    const isValid = this.zschema.compileSchema(schema);\n    if (isValid) {\n      return this.getDefinition(schema, ref);\n    } else {\n      throw this.zschema.getLastError();\n    }\n  }\n\n  private denormalizeRequiredPropertyPaths(err: any[]) {\n    if (err && err.length) {\n      err = err.map(error => {\n        if (error.path === '#/' && error.code === 'OBJECT_MISSING_REQUIRED_PROPERTY') {\n          error.path = `${error.path}${error.params[0]}`;\n        }\n        return error;\n      });\n    }\n  }\n\n  private getDefinition(schema: any, ref: string) {\n    let foundSchema = schema;\n    ref.split('/').slice(1).forEach(ptr => {\n      if (ptr) {\n        foundSchema = foundSchema[ptr];\n      }\n    });\n    return foundSchema;\n  }\n}\n\n","export class WidgetRegistry {\n\n  private widgets: { [type: string]: any } = {};\n\n  private defaultWidget: any;\n\n  constructor() { }\n\n  setDefaultWidget(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  getDefaultWidget() {\n    return this.defaultWidget;\n  }\n\n  hasWidget(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  getWidgetType(type: string): any {\n    if (this.hasWidget(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n","import {\n  ViewContainerRef,\n  ComponentRef,\n  ComponentFactoryResolver,\n  Injectable\n} from '@angular/core';\n\nimport { WidgetRegistry } from './widgetregistry';\n\n@Injectable()\nexport class WidgetFactory {\n\n  private resolver: ComponentFactoryResolver;\n  private registry: WidgetRegistry;\n\n  constructor(registry: WidgetRegistry, resolver: ComponentFactoryResolver) {\n    this.registry = registry;\n    this.resolver = resolver;\n  }\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<any> {\n    let componentClass = this.registry.getWidgetType(type);\n\n    let componentFactory = this.resolver.resolveComponentFactory(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TerminatorService {\n  public onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnChanges,\n  EventEmitter,\n  Input,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport {Action} from './model/action';\nimport {ActionRegistry} from './model/actionregistry';\nimport {FormProperty} from './model/formproperty';\nimport {FormPropertyFactory} from './model/formpropertyfactory';\nimport {SchemaPreprocessor} from './model/schemapreprocessor';\nimport {ValidatorRegistry} from './model/validatorregistry';\nimport {Validator} from './model/validator';\nimport {Binding} from './model/binding';\nimport {BindingRegistry} from './model/bindingregistry';\n\nimport {SchemaValidatorFactory} from './schemavalidatorfactory';\nimport {WidgetFactory} from './widgetfactory';\nimport {TerminatorService} from './terminator.service';\n\nexport function useFactory(schemaValidatorFactory, validatorRegistry) {\n  return new FormPropertyFactory(schemaValidatorFactory, validatorRegistry);\n}\n\n@Component({\n  selector: 'sf-form',\n  template: `\n    <form>\n      <sf-form-element\n        *ngIf=\"rootProperty\" [formProperty]=\"rootProperty\"></sf-form-element>\n    </form>`,\n  providers: [\n    ActionRegistry,\n    ValidatorRegistry,\n    BindingRegistry,\n    SchemaPreprocessor,\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory: useFactory,\n      deps: [SchemaValidatorFactory, ValidatorRegistry]\n    },\n    TerminatorService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FormComponent,\n      multi: true\n    }\n  ]\n})\nexport class FormComponent implements OnChanges, ControlValueAccessor {\n\n  @Input() schema: any = null;\n\n  @Input() model: any;\n\n  @Input() actions: { [actionId: string]: Action } = {};\n\n  @Input() validators: { [path: string]: Validator } = {};\n\n  @Input() bindings: { [path: string]: Binding } = {};\n\n  @Output() onChange = new EventEmitter<{ value: any }>();\n\n  @Output() modelChange = new EventEmitter<any>();\n\n  @Output() isValid = new EventEmitter<boolean>();\n\n  @Output() onErrorChange = new EventEmitter<{ value: any[] }>();\n\n  @Output() onErrorsChange = new EventEmitter<{value: any}>();\n\n  rootProperty: FormProperty = null;\n\n  private onChangeCallback: any;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private actionRegistry: ActionRegistry,\n    private validatorRegistry: ValidatorRegistry,\n    private bindingRegistry: BindingRegistry,\n    private cdr: ChangeDetectorRef,\n    private terminator: TerminatorService\n  ) { }\n\n  writeValue(obj: any) {\n    if (this.rootProperty) {\n      this.rootProperty.reset(obj, false);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n    if (this.rootProperty) {\n      this.rootProperty.valueChanges.subscribe(\n        this.onValueChanges.bind(this)\n      );\n    }\n  }\n\n  // TODO implement\n  registerOnTouched(fn: any) {\n  }\n\n  // TODO implement\n  // setDisabledState(isDisabled: boolean)?: void\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.validators) {\n      this.setValidators();\n    }\n\n    if (changes.actions) {\n      this.setActions();\n    }\n\n    if (changes.bindings) {\n      this.setBindings();\n    }\n\n    if (this.schema && !this.schema.type) {\n      this.schema.type = 'object';\n    }\n\n    if (this.schema && changes.schema) {\n      if (!changes.schema.firstChange) {\n        this.terminator.destroy();\n      }\n\n      SchemaPreprocessor.preprocess(this.schema);\n      this.rootProperty = this.formPropertyFactory.createProperty(this.schema);\n      if (this.model) {\n        // this.rootProperty.reset(this.model, false);\n      }\n\n      this.rootProperty.valueChanges.subscribe(\n        this.onValueChanges.bind(this)\n      );\n\n      this.rootProperty.errorsChanges.subscribe(value => {\n        this.onErrorChange.emit({value: value});\n        this.isValid.emit(!(value && value.length));\n      });\n\n    }\n\n    if (this.schema && (changes.model || changes.schema )) {\n      this.rootProperty.reset(this.model, false);\n      this.cdr.detectChanges();\n    }\n\n  }\n\n  private setValidators() {\n    this.validatorRegistry.clear();\n    if (this.validators) {\n      for (const validatorId in this.validators) {\n        if (this.validators.hasOwnProperty(validatorId)) {\n          this.validatorRegistry.register(validatorId, this.validators[validatorId]);\n        }\n      }\n    }\n  }\n\n  private setActions() {\n    this.actionRegistry.clear();\n    if (this.actions) {\n      for (const actionId in this.actions) {\n        if (this.actions.hasOwnProperty(actionId)) {\n          this.actionRegistry.register(actionId, this.actions[actionId]);\n        }\n      }\n    }\n  }\n\n  private setBindings() {\n    this.bindingRegistry.clear();\n    if (this.bindings) {\n      for (const bindingPath in this.bindings) {\n        if (this.bindings.hasOwnProperty(bindingPath)) {\n          this.bindingRegistry.register(bindingPath, this.bindings[bindingPath]);\n        }\n      }\n    }\n  }\n\n  public reset() {\n    this.rootProperty.reset(null, true);\n  }\n\n  private setModel(value: any) {\n    if (this.model) {\n      Object.assign(this.model, value);\n    } else {\n      this.model = value;\n    }\n  }\n\n  private onValueChanges(value) {\n    if (this.onChangeCallback) {\n      this.setModel(value);\n      this.onChangeCallback(value);\n    }\n\n    // two way binding is used\n    if (this.modelChange.observers.length > 0) {\n      if (!this.onChangeCallback) {\n        this.setModel(value);\n      }\n      this.modelChange.emit(value);\n    }\n    this.onChange.emit({value: value});\n  }\n}\n","import {\n  Component, ElementRef,\n  Input, OnDestroy,\n  OnInit, Renderer2\n} from '@angular/core';\n\nimport {\n  FormControl\n} from '@angular/forms';\n\nimport {Widget} from './widget';\n\nimport {ActionRegistry} from './model/actionregistry';\nimport {FormProperty} from './model/formproperty';\nimport {BindingRegistry} from './model/bindingregistry';\nimport {Binding} from './model/binding';\nimport {Function} from 'estree';\n\n@Component({\n  selector: 'sf-form-element',\n  template: `\n    <div *ngIf=\"formProperty.visible\"\n         [class.has-error]=\"!control.valid\"\n         [class.has-success]=\"control.valid\">\n      <sf-widget-chooser\n        (widgetInstanciated)=\"onWidgetInstanciated($event)\"\n        [widgetInfo]=\"formProperty.schema.widget\">\n      </sf-widget-chooser>\n      <sf-form-element-action *ngFor=\"let button of buttons\" [button]=\"button\" [formProperty]=\"formProperty\"></sf-form-element-action>\n    </div>`\n})\nexport class FormElementComponent implements OnInit, OnDestroy {\n\n  private static counter = 0;\n\n  @Input() formProperty: FormProperty;\n  control: FormControl = new FormControl('', () => null);\n\n  widget: Widget<any> = null;\n\n  buttons = [];\n\n  unlisten = [];\n\n  constructor(private actionRegistry: ActionRegistry,\n              private bindingRegistry: BindingRegistry,\n              private renderer: Renderer2,\n              private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.parseButtons();\n    this.setupBindings();\n  }\n\n  private setupBindings() {\n    const bindings: Binding[] = this.bindingRegistry.get(this.formProperty.path);\n    if ((bindings || []).length) {\n      bindings.forEach((binding) => {\n        for (const eventId in binding) {\n          this.createBinding(eventId, binding[eventId]);\n        }\n      });\n    }\n  }\n\n  private createBinding(eventId, listener) {\n    this.unlisten.push(this.renderer.listen(this.elementRef.nativeElement,\n      eventId,\n      (event) => {\n        if (listener instanceof Function) {\n          listener(event, this.formProperty);\n        } else {\n          console.warn('Calling non function handler for eventId ' + eventId + ' for path ' + this.formProperty.path);\n        }\n      }));\n  }\n\n  private parseButtons() {\n    if (this.formProperty.schema.buttons !== undefined) {\n      this.buttons = this.formProperty.schema.buttons;\n\n      for (let button of this.buttons) {\n        this.createButtonCallback(button);\n      }\n    }\n  }\n\n  private createButtonCallback(button) {\n    button.action = (e) => {\n      let action;\n      if (button.id && (action = this.actionRegistry.get(button.id))) {\n        if (action) {\n          action(this.formProperty, button.parameters);\n        }\n      }\n      e.preventDefault();\n    };\n  }\n\n  onWidgetInstanciated(widget: Widget<any>) {\n    this.widget = widget;\n    let id = 'field' + (FormElementComponent.counter++);\n\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.name = id;\n    this.widget.id = id;\n    this.widget.control = this.control;\n  }\n\n  ngOnDestroy(): void {\n    if (this.unlisten) {\n      this.unlisten.forEach((item) => {\n        item();\n      });\n    }\n  }\n\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  ViewChild,\n  ViewContainerRef,\n  OnInit,\n  OnDestroy\n} from \"@angular/core\";\nimport {Subscription} from 'rxjs';\nimport {WidgetFactory} from \"./widgetfactory\";\nimport {TerminatorService} from \"./terminator.service\";\n\n@Component({\n  selector: 'sf-form-element-action',\n  template: '<ng-template #target></ng-template>'\n})\nexport class FormElementComponentAction implements OnInit, OnChanges, OnDestroy {\n\n  @Input()\n  button: any;\n\n  @Input()\n  formProperty: any;\n\n  @ViewChild('target', {read: ViewContainerRef}) container: ViewContainerRef;\n\n  private ref: ComponentRef<any>;\n  private subs: Subscription;\n\n  constructor(private widgetFactory: WidgetFactory = null,\n              private terminator: TerminatorService) {\n  }\n\n  ngOnInit() {\n    this.subs = this.terminator.onDestroy.subscribe(destroy => {\n      if (destroy) {\n        this.ref.destroy();\n      }\n    });\n  }\n\n  ngOnChanges() {\n    this.ref = this.widgetFactory.createWidget(this.container, this.button.widget || 'button');\n    this.ref.instance.button = this.button;\n    this.ref.instance.formProperty = this.formProperty;\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  ChangeDetectorRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { TerminatorService } from './terminator.service';\nimport { WidgetFactory } from './widgetfactory';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'sf-widget-chooser',\n  template: `<div #target></div>`,\n})\nexport class WidgetChooserComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input() widgetInfo: any;\n\n  @Output() widgetInstanciated = new EventEmitter<any>();\n\n  @ViewChild('target', {read: ViewContainerRef}) container: ViewContainerRef;\n\n  private widgetInstance: any;\n  private ref: ComponentRef<any>;\n  private subs: Subscription;\n\n  constructor(\n    private widgetFactory: WidgetFactory = null,\n    private cdr: ChangeDetectorRef,\n    private terminator: TerminatorService,\n  ) { }\n\n  ngOnInit() {\n    this.subs = this.terminator.onDestroy.subscribe(destroy => {\n      if (destroy) {\n        this.ref.destroy();\n      }\n    });\n  }\n\n  ngOnChanges() {\n    this.ref = this.widgetFactory.createWidget(this.container, this.widgetInfo.id);\n    this.widgetInstanciated.emit(this.ref.instance);\n    this.widgetInstance = this.ref.instance;\n    this.cdr.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import {AfterViewInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {ArrayProperty} from './model/arrayproperty';\nimport {FormProperty} from './model/formproperty';\nimport {ObjectProperty} from './model/objectproperty';\n\nexport abstract class Widget<T extends FormProperty> {\n  formProperty: T;\n  control: FormControl;\n  errorMessages: string[];\n\n  id: string = '';\n  name: string = '';\n  schema: any = {};\n}\n\nexport class ControlWidget extends Widget<FormProperty> implements AfterViewInit {\n\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.valueChanges.subscribe((newValue) => {\n      if (control.value !== newValue) {\n        control.setValue(newValue, {emitEvent: false});\n      }\n    });\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, { emitEvent: true });\n      const messages = (errors || [])\n        .filter(e => {\n          return e.path && e.path.slice(1) === this.formProperty.path;\n        })\n        .map(e => e.message);\n      this.errorMessages = messages.filter((m, i) => messages.indexOf(m) === i);\n    });\n    control.valueChanges.subscribe((newValue) => {\n      this.formProperty.setValue(newValue, false);\n    });\n  }\n\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty> implements AfterViewInit {\n\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, {emitEvent: true});\n    });\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty> implements AfterViewInit {\n\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, {emitEvent: true});\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n\t<span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<div *ngFor=\"let itemProperty of formProperty.properties; let i=index; trackBy:trackByIndex\">\n\t\t<sf-form-element [formProperty]=\"itemProperty\"></sf-form-element>\n\t\t<button (click)=\"removeItem(i)\" class=\"btn btn-default array-remove-button\">\n\t\t\t<span class=\"glyphicon glyphicon-minus\" aria-hidden=\"true\"></span> Remove\n\t\t</button>\n\t</div>\n\t<button (click)=\"addItem()\" class=\"btn btn-default array-add-button\">\n\t\t<span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> Add\n\t</button>\n</div>`\n})\nexport class ArrayWidget extends ArrayLayoutWidget {\n\n  addItem() {\n    this.formProperty.addItem();\n  }\n\n  removeItem(index: number) {\n    this.formProperty.removeItem(index);\n  }\n\n  trackByIndex(index: number, item: any) {\n    return index;\n  }\n}\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: 'sf-button-widget',\n  template: '<button (click)=\"button.action($event)\">{{button.label}}</button>'\n})\nexport class ButtonWidget {\n  public button\n  public formProperty\n}\n","import { Component } from '@angular/core';\n\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-form-object',\n  template: `<fieldset *ngFor=\"let fieldset of formProperty.schema.fieldsets\">\n\t<legend *ngIf=\"fieldset.title\">{{fieldset.title}}</legend>\n\t<div *ngIf=\"fieldset.description\">{{fieldset.description}}</div>\n\t<div *ngFor=\"let fieldId of fieldset.fields\">\n\t\t<sf-form-element [formProperty]=\"formProperty.getProperty(fieldId)\"></sf-form-element>\n\t</div>\n</fieldset>`\n})\nexport class ObjectWidget extends ObjectLayoutWidget { }\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox-widget',\n  template: `<div class=\"widget form-group\">\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\n        {{ schema.title }}\n    </label>\n\t<div *ngIf=\"schema.type!='array'\" class=\"checkbox\">\n\t\t<label class=\"horizontal control-label\">\n\t\t\t<input [formControl]=\"control\" [attr.name]=\"name\" [indeterminate]=\"control.value !== false && control.value !== true ? true :null\" type=\"checkbox\" [attr.disabled]=\"schema.readOnly\">\n\t\t\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n\t\t\t{{schema.description}}\n\t\t</label>\n\t</div>\n\t<ng-container *ngIf=\"schema.type==='array'\">\n\t\t<div *ngFor=\"let option of schema.items.oneOf\" class=\"checkbox\">\n\t\t\t<label class=\"horizontal control-label\">\n\t\t\t\t<input [attr.name]=\"name\"\n\t\t\t\t\tvalue=\"{{option.enum[0]}}\" type=\"checkbox\" \n\t\t\t\t\t[attr.disabled]=\"schema.readOnly\"\n\t\t\t\t\t(change)=\"onCheck($event.target)\"\n\t\t\t\t\t[attr.checked]=\"checked[option.enum[0]] ? true : null\">\n\t\t\t\t{{option.description}}\n\t\t\t</label>\n\t\t</div>\n\t</ng-container>\n</div>`\n})\nexport class CheckboxWidget extends ControlWidget implements AfterViewInit {\n\n\tchecked: any = {};\n\n\tngAfterViewInit() {\n\t\tconst control = this.control;\n\t\tthis.formProperty.valueChanges.subscribe((newValue) => {\n\t\t\tif (control.value !== newValue) {\n\t\t\t\tcontrol.setValue(newValue, { emitEvent: false });\n\t\t\t\tif (newValue && Array.isArray(newValue)) {\n\t\t\t\t\tnewValue.map(v => this.checked[v] = true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.formProperty.errorsChanges.subscribe((errors) => {\n\t\t\tcontrol.setErrors(errors, { emitEvent: true });\n\t\t});\n\t\tcontrol.valueChanges.subscribe((newValue) => {\n\t\t\tthis.formProperty.setValue(newValue, false);\n\t\t});\n\t}\n\n\tonCheck(el) {\n\t\tif (el.checked) {\n\t\t\tthis.checked[el.value] = true;\n\t\t} else {\n\t\t\tdelete this.checked[el.value];\n\t\t}\n\t\tthis.formProperty.setValue(Object.keys(this.checked), false);\n\t}\n}\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-file-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n  <input [name]=\"name\" class=\"text-widget file-widget\" [attr.id]=\"id\"\n    [formControl]=\"control\" type=\"file\" [attr.disabled]=\"schema.readOnly?true:null\"\n    (change)=\"onFileChange($event)\">\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class FileWidget extends ControlWidget implements AfterViewInit {\n\n  protected reader = new FileReader();\n  protected filedata: any = {};\n\n  constructor() {\n    super();\n  }\n\n  ngAfterViewInit() {\n    // OVERRIDE ControlWidget ngAfterViewInit() as ReactiveForms do not handle\n    // file inputs\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, { emitEvent: true });\n    });\n\n    this.reader.onloadend = () => {\n      this.filedata.data = btoa(this.reader.result);\n      this.formProperty.setValue(this.filedata, false);\n    };\n  }\n\n  onFileChange($event) {\n    const file = $event.target.files[0];\n    this.filedata.filename = file.name;\n    this.filedata.size = file.size;\n    this.filedata['content-type'] = file.type;\n    this.filedata.encoding = 'base64';\n    this.reader.readAsBinaryString(file);\n  }\n}\n","import {\n  Component,\n} from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-integer-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n  <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<input [attr.readonly]=\"schema.readOnly?true:null\" [name]=\"name\"\n\tclass=\"text-widget integer-widget form-control\" [formControl]=\"control\"\n\t[attr.type]=\"'number'\" [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\"\n\t[attr.placeholder]=\"schema.placeholder\"\n\t[attr.maxLength]=\"schema.maxLength || null\"\n  [attr.minLength]=\"schema.minLength || null\">\n</div>`\n})\nexport class IntegerWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<textarea [attr.readonly]=\"schema.readOnly\" [name]=\"name\"\n\t\tclass=\"text-widget textarea-widget form-control\"\n\t\t[attr.placeholder]=\"schema.placeholder\"\n\t\t[attr.maxLength]=\"schema.maxLength || null\"\n    [attr.minLength]=\"schema.minLength || null\"\n\t\t[formControl]=\"control\"></textarea>\n</div>`\n})\nexport class TextAreaWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio-widget',\n  template: `<div class=\"widget form-group\">\n\t<label>{{schema.title}}</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<div *ngFor=\"let option of schema.oneOf\" class=\"radio\">\n\t\t<label class=\"horizontal control-label\">\n\t\t\t<input [formControl]=\"control\" [attr.name]=\"name\" value=\"{{option.enum[0]}}\" type=\"radio\"  [attr.disabled]=\"schema.readOnly\">\n\t\t\t{{option.description}}\n\t\t</label>\n\t</div>\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class RadioWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-range-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\t\n\t<input [name]=\"name\" class=\"text-widget range-widget\" [attr.id]=\"id\"\n\t[formControl]=\"control\" [attr.type]=\"'range'\" [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\" [attr.disabled]=\"schema.readOnly?true:null\" >\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\">\n</div>`\n})\nexport class RangeWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n\tselector: 'sf-select-widget',\n\ttemplate: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n\n\t<span *ngIf=\"schema.description\" class=\"formHelp\">\n\t\t{{schema.description}}\n\t</span>\n\n\t<select *ngIf=\"schema.type!='array'\" [formControl]=\"control\" [attr.name]=\"name\" [attr.disabled]=\"schema.readOnly\" class=\"form-control\">\n\t\t<option *ngFor=\"let option of schema.oneOf\" [ngValue]=\"option.enum[0]\" >{{option.description}}</option>\n\t</select>\n\n\t<select *ngIf=\"schema.type==='array'\" multiple [formControl]=\"control\" [attr.name]=\"name\" [attr.disabled]=\"schema.readOnly\" class=\"form-control\">\n\t\t<option *ngFor=\"let option of schema.items.oneOf\" [ngValue]=\"option.enum[0]\" >{{option.description}}</option>\n\t</select>\n\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class SelectWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string-widget',\n  template: `<input *ngIf=\"this.getInputType()==='hidden'; else notHiddenFieldBlock\"\n  [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n<ng-template #notHiddenFieldBlock>\n<div class=\"widget form-group\">\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\n    \t{{ schema.title }}\n    </label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n    <input [name]=\"name\" [attr.readonly]=\"(schema.widget.id!=='color') && schema.readOnly?true:null\"\n    class=\"text-widget.id textline-widget form-control\" [attr.type]=\"this.getInputType()\"\n    [attr.id]=\"id\"  [formControl]=\"control\" [attr.placeholder]=\"schema.placeholder\"\n    [attr.maxLength]=\"schema.maxLength || null\"\n    [attr.minLength]=\"schema.minLength || null\"\n    [attr.disabled]=\"(schema.widget.id=='color' && schema.readOnly)?true:null\">\n    <input *ngIf=\"(schema.widget.id==='color' && schema.readOnly)\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>\n</ng-template>`\n})\nexport class StringWidget extends ControlWidget {\n\n    getInputType() {\n        if (!this.schema.widget.id || this.schema.widget.id === 'string') {\n            return 'text';\n        } else {\n            return this.schema.widget.id;\n        }\n    }\n}\n","import { ArrayWidget } from './array/array.widget';\nimport { ButtonWidget } from './button/button.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { FileWidget } from './file/file.widget';\nimport { IntegerWidget } from './integer/integer.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RangeWidget } from './range/range.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TextAreaWidget } from './textarea/textarea.widget';\n\nimport { WidgetRegistry } from '../widgetregistry';\n\nexport class DefaultWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('array',  ArrayWidget);\n    this.register('object',  ObjectWidget);\n\n    this.register('string', StringWidget);\n    this.register('search', StringWidget);\n    this.register('tel', StringWidget);\n    this.register('url', StringWidget);\n    this.register('email', StringWidget);\n    this.register('password', StringWidget);\n    this.register('color', StringWidget);\n    this.register('date', StringWidget);\n    this.register('date-time', StringWidget);\n    this.register('time', StringWidget);\n\n    this.register('integer', IntegerWidget);\n    this.register('number', IntegerWidget);\n    this.register('range', RangeWidget);\n\n    this.register('textarea', TextAreaWidget);\n\n    this.register('file', FileWidget);\n    this.register('select', SelectWidget);\n    this.register('radio', RadioWidget);\n    this.register('boolean', CheckboxWidget);\n    this.register('checkbox', CheckboxWidget);\n\n    this.register('button', ButtonWidget);\n\n    this.setDefaultWidget(StringWidget);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'sf-default-field',\n  template: `<p>Unknow type</p>`\n})\nexport class DefaultWidget {}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms';\n\nimport {FormElementComponent} from './formelement.component';\nimport {FormComponent} from './form.component';\nimport {WidgetChooserComponent} from './widgetchooser.component';\nimport {ArrayWidget} from './defaultwidgets/array/array.widget';\nimport {ButtonWidget} from './defaultwidgets/button/button.widget';\nimport {ObjectWidget} from './defaultwidgets/object/object.widget';\nimport {CheckboxWidget} from './defaultwidgets/checkbox/checkbox.widget';\nimport {FileWidget} from './defaultwidgets/file/file.widget';\nimport {IntegerWidget} from './defaultwidgets/integer/integer.widget';\nimport {TextAreaWidget} from './defaultwidgets/textarea/textarea.widget';\nimport {RadioWidget} from './defaultwidgets/radio/radio.widget';\nimport {RangeWidget} from './defaultwidgets/range/range.widget';\nimport {SelectWidget} from './defaultwidgets/select/select.widget';\nimport {StringWidget} from './defaultwidgets/string/string.widget';\nimport {DefaultWidgetRegistry} from './defaultwidgets/defaultwidgetregistry';\nimport {\n  DefaultWidget\n} from './default.widget';\n\nimport {WidgetRegistry} from './widgetregistry';\nimport {SchemaValidatorFactory, ZSchemaValidatorFactory} from './schemavalidatorfactory';\nimport {FormElementComponentAction} from './formelement.action.component';\n\nconst moduleProviders = [\n  {\n    provide: WidgetRegistry,\n    useClass: DefaultWidgetRegistry\n  },\n  {\n    provide: SchemaValidatorFactory,\n    useClass: ZSchemaValidatorFactory\n  }\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  declarations: [\n    FormElementComponent,\n    FormElementComponentAction,\n    FormComponent,\n    WidgetChooserComponent,\n    DefaultWidget,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget,\n  ],\n  entryComponents: [\n    FormElementComponent,\n    FormElementComponentAction,\n    FormComponent,\n    WidgetChooserComponent,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget,\n  ],\n  exports: [\n    FormComponent,\n    FormElementComponent,\n    FormElementComponentAction,\n    WidgetChooserComponent,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget\n  ]\n})\nexport class SchemaFormModule {\n\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SchemaFormModule,\n      providers: [...moduleProviders]\n    };\n  }\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\nexport class TemplateSchemaService {\n\n  changes = new EventEmitter();\n\n  constructor() { }\n\n  changed() {\n    this.changes.emit();\n  }\n\n}\n","import { ElementRef } from '@angular/core';\n\nexport class TemplateSchemaElement {\n\n  getTextContent(elementRef: ElementRef): string {\n    const nodes = Array.from(elementRef.nativeElement.childNodes);\n    const node = <HTMLElement>nodes.filter((el: HTMLElement) => {\n      return el.nodeType === el.TEXT_NODE;\n    }).pop();\n\n    if (!node || !node.nodeValue) {\n      return '';\n    }\n\n    return node.nodeValue.trim();\n  }\n\n}\n","import {\n  Component,\n  AfterContentInit,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TemplateSchemaElement } from '../template-schema-element';\n\n\n@Component({\n  selector: 'sf-button',\n  template: `<ng-content></ng-content>\n`,\n  providers: [\n    {\n      provide: TemplateSchemaElement,\n      useExisting: forwardRef(() => ButtonComponent),\n    }\n  ]\n})\nexport class ButtonComponent extends TemplateSchemaElement implements AfterContentInit {\n\n  @Input()\n  id: string;\n\n  @Input()\n  label = '';\n\n  @Input()\n  widget: string | object;\n\n  @Output()\n  click = new EventEmitter<any>();\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  private setLabelFromContent() {\n    const textContent = this.getTextContent(this.elementRef);\n\n    // label as @Input takes priority over content text\n    if (textContent && !this.label) {\n      this.label = textContent;\n    }\n\n  }\n\n  ngAfterContentInit() {\n    this.setLabelFromContent();\n  }\n\n}\n","import { Validator } from '../../model/validator';\n\nexport enum FieldType {\n  String = 'string',\n  Object = 'object',\n  Array = 'array',\n  Boolean = 'boolean',\n  Integer =  'integer',\n  Number = 'number',\n}\n\nexport interface Field {\n  name: string;\n  required: boolean;\n  getSchema(): any;\n  getButtons(): any;\n  getValidators(): { path: string, validator: Validator }[];\n}\n\n\n","import { ElementRef, QueryList } from '@angular/core';\n\nimport { Validator } from '../../model/validator';\nimport { ActionRegistry } from '../../model/actionregistry';\nimport { ButtonComponent } from '../button/button.component';\nimport { TemplateSchemaElement } from '../template-schema-element';\n\nimport { Field, FieldType } from './field';\n\nexport abstract class FieldParent extends TemplateSchemaElement {\n\n  name = '';\n  type: FieldType;\n\n  get path(): string {\n    if (!this.name) {\n      return '';\n    }\n\n    return '/' + this.name;\n  }\n\n  protected abstract actionRegistry: ActionRegistry;\n  protected abstract childButtons: QueryList<ButtonComponent>;\n\n\n  getButtons(): { id: string, label: string, widget?: string | object }[] {\n\n    return this.childButtons.map((button, index) => {\n\n      if (!button.id) {\n        const randomString = Math.random().toString(16).substr(2, 8);\n        // generate id for button\n        button.id = this.name + randomString + '_'  + (index + 1);\n      }\n\n      // register as button action the EventEmitter click\n      this.actionRegistry.register(\n        button.id,\n        button.click.emit.bind(button.click)\n      );\n\n      const _button = <any>{\n        id: button.id,\n        label: button.label,\n      };\n\n      if (button.widget) {\n        _button.widget = button.widget;\n      }\n\n      return _button;\n\n    });\n  }\n\n  protected getFieldsValidators(\n    fields: Field[]\n  ): { path: string, validator: Validator }[] {\n\n    return fields.reduce((validators, field) => {\n      return validators.concat(field.getValidators());\n    }, []);\n\n  }\n\n  protected getFieldsSchema(fields: Field[]) {\n    return fields.reduce((schema: any, field) => {\n\n      switch (this.type) {\n        case FieldType.Array:\n          schema.items = field.getSchema();\n          break;\n\n        default:\n          if (!schema.properties) {\n            schema.properties = {};\n          }\n\n          schema.properties[field.name] = field.getSchema();\n          break;\n      }\n\n      const buttons = field.getButtons();\n      if (buttons.length > 0) {\n        schema.buttons = buttons;\n      }\n\n      if (!field.required) {\n        return schema;\n      }\n\n      if (!schema.required) {\n        schema.required = [];\n      }\n      schema.required.push(field.name);\n      return schema;\n    }, {});\n  }\n\n}\n","import {\n Component,\n ElementRef,\n Input,\n OnInit,\n forwardRef\n} from '@angular/core';\n\nimport { TemplateSchemaElement } from '../../template-schema-element';\n\n\n@Component({\n  selector: 'sf-item',\n  template: `<ng-content></ng-content>\n`\n})\nexport class ItemComponent extends TemplateSchemaElement implements OnInit {\n\n  @Input()\n  value: any;\n\n  description: string;\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.description = this.getTextContent(this.elementRef);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  AfterContentInit,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  ElementRef,\n  forwardRef,\n  SimpleChanges,\n  SimpleChange,\n  OnChanges\n} from '@angular/core';\nimport { Observable, merge } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Action } from '../../model/action';\nimport { ActionRegistry } from '../../model/actionregistry';\nimport { Validator } from '../../model/validator';\n\nimport { TemplateSchemaElement } from '../template-schema-element';\nimport { TemplateSchemaService } from '../template-schema.service';\nimport { ButtonComponent } from '../button/button.component';\n\nimport { FieldParent } from './field-parent';\nimport { FieldType, Field } from './field';\nimport { ItemComponent } from './item/item.component';\n\n\n@Component({\n  selector: 'sf-field',\n  template: `<ng-content ></ng-content>\n`\n})\nexport class FieldComponent extends FieldParent implements\nField, OnChanges, AfterContentInit {\n\n  @ContentChildren(FieldComponent)\n  childFields: QueryList<FieldComponent>;\n\n  @ContentChildren(ItemComponent)\n  childItems: QueryList<ItemComponent>;\n\n  @ContentChildren(ButtonComponent)\n  childButtons: QueryList<ButtonComponent>;\n\n  @Input()\n  name: string;\n\n  @Input()\n  type = FieldType.String;\n\n  @Input()\n  format: string;\n\n  @Input()\n  required: boolean;\n\n  @Input()\n  readOnly: boolean;\n\n  @Input()\n  title: string;\n\n  @Input()\n  description: string;\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  widget: string | object;\n\n  @Input()\n  validator: Validator;\n\n  @Input()\n  schema: any = { };\n\n  constructor(\n    private elementRef: ElementRef,\n    private templateSchemaService: TemplateSchemaService,\n    protected actionRegistry: ActionRegistry\n  ) {\n    super();\n  }\n\n  getSchema(): any {\n\n    const { properties, items, required } = this.getFieldsSchema(\n      this.childFields.filter(field => field !== this)\n    );\n\n    const oneOf = this.getOneOf();\n\n    const schema = <any>{\n      type: this.type\n    };\n\n    if (this.title !== undefined) {\n      schema.title = this.title;\n    }\n\n    if (properties !== undefined) {\n      schema.properties = properties;\n    }\n\n    if (items !== undefined) {\n      schema.items = items;\n    }\n\n    // requried child fields\n    if (required !== undefined) {\n      schema.required = required;\n    }\n\n    if (oneOf !== undefined) {\n      schema.oneOf = oneOf;\n    }\n\n    if (this.description !== undefined) {\n      schema.description = this.description;\n    }\n\n    if (this.placeholder !== undefined) {\n      schema.placeholder = this.placeholder;\n    }\n\n    if (this.format !== undefined) {\n      schema.format = this.format;\n    }\n\n    if (this.widget !== undefined) {\n      schema.widget = this.widget;\n    }\n\n    if (this.readOnly !== undefined) {\n      schema.readOnly = this.readOnly;\n    }\n\n    const buttons = this.getButtons();\n    if (buttons.length > 0) {\n      schema.buttons = buttons;\n    }\n\n    // @Input schema takes precedence\n    return Object.assign(schema, this.schema);\n\n  }\n\n  getValidators(): { path: string, validator: Validator }[] {\n\n    // registering validator here is not possible since prop full path is needed\n    const childValidators = this.getFieldsValidators(\n      this.childFields.filter(field => field !== this)\n    );\n    const validators = childValidators.map(({ path, validator }) => {\n      return {\n        path: this.path + path,\n        validator\n      };\n    });\n\n    if (!this.validator) {\n      return validators;\n    }\n\n    validators.push({ path: this.path, validator: this.validator });\n    return validators;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    const keys = Object.keys(changes);\n    if (keys.length > 0) {\n      for (const key of keys) {\n        if (!changes[key].isFirstChange()) {\n          // on any input change, force schema change generation\n          this.templateSchemaService.changed();\n          break;\n        }\n      }\n    }\n\n  }\n\n\n  private getOneOf() {\n\n    if (this.childItems.length === 0) {\n      return;\n    }\n\n    const items = this.childItems.map(({ value, description }) => {\n      if (!Array.isArray(value)) {\n        return { enum: [value], description };\n      }\n\n      return { enum: value, description };\n    });\n\n    if (items.length === 0) {\n      return;\n    }\n\n    return items;\n  }\n\n\n  private setTitleFromContent() {\n    const textContent = this.getTextContent(this.elementRef);\n\n    //  title as @Input takes priority over content text\n    if (textContent && !this.title) {\n      this.title = textContent;\n    }\n  }\n\n  ngAfterContentInit() {\n\n    // cache it\n    this.setTitleFromContent();\n\n    merge(\n      this.childFields.changes,\n      this.childItems.changes,\n      this.childButtons.changes\n    )\n    .subscribe(() => this.templateSchemaService.changed());\n  }\n\n}\n","import {\n  Directive,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  HostBinding,\n  SimpleChange,\n  SimpleChanges\n} from '@angular/core';\nimport { merge } from 'rxjs';\n\nimport { FormComponent } from '../form.component';\nimport { ActionRegistry } from '../model/actionregistry';\nimport { ValidatorRegistry } from '../model/validatorregistry';\nimport { TerminatorService } from '../terminator.service';\n\nimport { TemplateSchemaService } from './template-schema.service';\nimport { FieldComponent } from './field/field.component';\nimport { FieldType, Field } from './field/field';\nimport { ButtonComponent } from './button/button.component';\nimport { FieldParent } from './field/field-parent';\n\n\n@Directive({\n  selector: 'sf-form[templateSchema]',\n  providers: [\n    TemplateSchemaService\n  ]\n})\nexport class TemplateSchemaDirective extends FieldParent implements AfterContentInit {\n\n  @ContentChildren(FieldComponent)\n  childFields: QueryList<FieldComponent>;\n\n  @ContentChildren(ButtonComponent)\n  childButtons: QueryList<ButtonComponent>;\n\n  constructor(\n    protected actionRegistry: ActionRegistry,\n    protected validatorRegistry: ValidatorRegistry,\n    private formComponent: FormComponent,\n    private terminatorService: TerminatorService,\n    private templateSchemaService: TemplateSchemaService\n  ) {\n    super();\n  }\n\n  setFormDocumentSchema(fields: FieldComponent[]) {\n      this.actionRegistry.clear();\n      this.validatorRegistry.clear();\n\n      const schema = this.getFieldsSchema(fields);\n\n      const validators = this.getFieldsValidators(fields);\n      validators.forEach(({ path, validator }) => {\n        this.validatorRegistry.register(path, validator);\n      });\n\n      const previousSchema = this.formComponent.schema;\n      this.formComponent.schema = {\n        type: FieldType.Object,\n        properties: schema.properties\n      };\n\n      if (schema.required && schema.required.length > 0) {\n        this.formComponent.schema.requred = schema.required;\n      }\n\n      const buttons = this.getButtons();\n      if (buttons.length > 0) {\n        this.formComponent.schema.buttons = buttons;\n      }\n\n      this.formComponent.ngOnChanges({\n        schema: new SimpleChange(\n          previousSchema,\n          this.formComponent.schema,\n          Boolean(previousSchema)\n        )\n      });\n\n  }\n\n\n  ngAfterContentInit() {\n\n    if (this.childFields.length > 0) {\n      this.setFormDocumentSchema(this.childFields.toArray());\n    }\n\n    merge(\n      this.childFields.changes,\n      this.templateSchemaService.changes\n    )\n   .subscribe(() => {\n      this.terminatorService.destroy();\n      this.setFormDocumentSchema(this.childFields.toArray());\n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FieldComponent } from './field/field.component';\nimport { TemplateSchemaDirective } from './template-schema.directive';\nimport { ButtonComponent } from './button/button.component';\nimport { ItemComponent } from './field/item/item.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    TemplateSchemaDirective,\n    FieldComponent,\n    ButtonComponent,\n    ItemComponent\n  ],\n  exports: [\n    TemplateSchemaDirective,\n    FieldComponent,\n    ButtonComponent,\n    ItemComponent\n  ]\n})\nexport class TemplateSchemaModule { }\n"],"names":["BehaviorSubject","map","combineLatest","distinctUntilChanged","tslib_1.__extends","tslib_1.__values","Injectable","ComponentFactoryResolver","Subject","EventEmitter","Component","NG_VALUE_ACCESSOR","ChangeDetectorRef","Input","Output","FormControl","Renderer2","ElementRef","ViewChild","ViewContainerRef","NgModule","CommonModule","FormsModule","ReactiveFormsModule","forwardRef","merge","ContentChildren","SimpleChange","Directive"],"mappings":"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"}
